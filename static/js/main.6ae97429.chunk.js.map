{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","components/ContactList/ContactListItem.module.scss","components/Container/Container.module.scss","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Container/Container.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","props","onSubmit","resetInput","console","log","this","className","styles","form","inputWrapper","input","onChange","type","pattern","title","required","button","Component","ContactListItem","id","onDelete","onClick","ContactsList","contacts","list","map","contact","item","defaultProps","Container","children","section","Filter","findLabel","findInput","App","filter","createContact","nanoid","some","checkedContact","toLowerCase","alert","deleteContact","contactId","changeFilter","getFilteredContacts","lowerCaseFilter","includes","contactsFromStorage","localStorage","getItem","parsedStoragedContacts","JSON","parse","prevProps","prevState","setItem","stringify","filteredContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ae97429.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2dOh4\",\"inputWrapper\":\"ContactForm_inputWrapper__3mAH0\",\"input\":\"ContactForm_input__1mzXe\",\"button\":\"ContactForm_button__2Vpmi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3GUq2\",\"item\":\"ContactList_item__hKRKv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findLabel\":\"Filter_findLabel__10pNV\",\"findInput\":\"Filter_findInput__1E27a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactListItem_button__3qBOc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Container_section__3Gyro\"};","import styles from './ContactForm.module.scss';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class ContactForm extends Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.number.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetInput();\n  };\n\n  resetInput = e => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.inputWrapper}>\n          Name\n          <input\n            className={styles.input}\n            value={this.state.name}\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={styles.inputWrapper}>\n          Number\n          <input\n            className={styles.input}\n            value={this.state.number}\n            onChange={this.handleChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.scss';\n\nexport const ContactListItem = ({ name, number, id, onDelete }) => {\n  return (\n    <>\n      <span>\n        {name} : {number}\n      </span>\n      <button\n        className={styles.button}\n        type=\"button\"\n        onClick={() => onDelete(id)}\n      >\n        x\n      </button>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { ContactListItem } from './ContactListItem';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.scss';\n\nexport const ContactsList = ({ contacts, onDelete }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(contact => (\n        <li className={styles.item} key={contact.id}>\n          <ContactListItem {...contact} onDelete={onDelete} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactsList.defaultProps = {\n  contacts: [],\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport styles from './Container.module.scss';\n\nexport const Container = ({ title, children }) => {\n  return (\n    <section className={styles.section}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nContainer.defaultProps = {\n  title: '',\n  children: [],\n};\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.scss';\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.findLabel}>\n      Find contacts by Name\n      <input\n        className={styles.findInput}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n};\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import './App.scss';\nimport React from 'react';\nimport { Component } from 'react';\nimport { ContactForm } from './components/ContactForm/ContactForm';\nimport { ContactsList } from './components/ContactList/ContactList';\nimport { Container } from './components/Container/Container';\nimport { nanoid } from 'nanoid';\nimport { Filter } from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    name: '',\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contactsFromStorage = localStorage.getItem('contacts');\n    const parsedStoragedContacts = JSON.parse(contactsFromStorage);\n    this.setState({ contacts: parsedStoragedContacts });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  createContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    const dublicateContact = contacts.some(checkedContact => {\n      console.log('conatcts', contacts);\n      console.log('iter', checkedContact.name);\n      console.log('name', name);\n      return checkedContact.name.toLowerCase() === name.toLowerCase();\n    });\n\n    if (dublicateContact) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    const { value } = e.currentTarget;\n    this.setState({ filter: value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const lowerCaseFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(lowerCaseFilter),\n    );\n  };\n\n  render() {\n    console.log(this.state);\n    const filteredContacts = this.getFilteredContacts();\n    const { filter } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Container title=\"Phonebook\">\n            <ContactForm onSubmit={this.createContact} />\n          </Container>\n          <Container title=\"Contacts\">\n            <Filter value={filter} onChange={this.changeFilter} />\n            <ContactsList\n              contacts={filteredContacts}\n              onDelete={this.deleteContact}\n            ></ContactsList>\n          </Container>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}